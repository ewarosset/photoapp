{"version":3,"sources":["PhotoViewer/getImages.js","PhotoViewer/PhotoViewer.jsx","Clicker/Clicker.jsx","Pages/Homepage/Homepage.jsx","Pages/Page2/TestPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["brokenImages","imageUrls","urls","i","includes","imageNumberString","toString","padStart","push","getImageUrls","PhotoViewer","useState","currentImage","setImage","className","alt","src","map","image","index","onClick","Clicker","clickNumber","setClickNumber","rando","Homepage","ClickHandler","ReactGA","event","category","action","alert","navigate","useNavigate","to","type","Test","App","useEffect","hotjar","initialize","location","useLocation","set","page","pathname","pageview","usePageViews","path","element","TestPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAAMA,G,MAAe,CACjB,EAAG,GAAI,GAAI,GAAI,GAAI,KAgBhB,IAAMC,EAbb,WAGI,IAFA,IAAMC,EAAO,GAEJC,EAAI,EAAGA,EAAI,GAAIA,IACpB,IAAKH,EAAaI,SAASD,GAAI,CAC3B,IAAME,EAAoBF,EAAEG,WAAWC,SAAS,EAAG,KACnDL,EAAKM,KAAL,oCAAuCH,EAAvC,kBAIR,OAAOH,EAGcO,G,OCZlB,SAASC,IAEZ,MAAiCC,mBAAS,6CAA1C,mBAAOC,EAAP,KAAqBC,EAArB,KAEA,OACI,gCACI,qBAAKC,UAAU,YAAYC,IAAI,UAAUC,IAAKJ,IAC9C,oBAAIE,UAAW,cAAf,+BAIA,qBAAKA,UAAU,aAAf,SACKb,EAAUgB,KAAI,SAACC,EAAOC,GAAR,OAEX,qBAAKH,IAAKE,EAAOH,IAAKG,EAAOE,QAAS,kBAAMP,EAASK,c,MChBlE,SAASG,IAEZ,MAAsCV,mBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KAQA,OACI,sBAAKT,UAAU,aAAf,UACI,wBAAQA,UAAU,WAAWM,QANrC,WACIG,EAAeD,EAAa,IAKxB,sBACA,oBAAGR,UAAU,cAAb,+BAA8CQ,KAE9C,oCAEI,4DACA,6BAdO,CAAC,QAAS,SAAU,YAAa,UAexBL,KAAI,SAACO,GAAD,OAEZ,6BAAKA,e,kBCgBdC,MAjCf,WAAqB,IAAD,EAEVC,EAAe,WACjBC,IAAQC,MAAM,CACVC,SAAU,SACVC,OAAQ,UAEZC,MAAM,+BAGJC,EAAWC,cAEjB,OACI,qBAAKnB,UAAU,MAAf,SACI,gCACI,oBAAIA,UAAU,gBAAd,gCACA,cAAC,EAAD,IACA,cAAC,IAAD,CAAMoB,GAAG,aAAapB,UAAW,aACjC,cAAC,EAAD,CAASM,QAAS,kBAAMM,KAExB,2BACIS,KAAK,SACLrB,UAAU,WACVM,QAAS,kBAAMM,IAHnB,yBAIa,kBAAMM,EAAS,iBAJ5B,8DCHDI,MAjBf,WAEI,OACI,8BACI,gCACI,cAAC,EAAD,IACA,wBACID,KAAK,SACLrB,UAAU,aAEd,cAAC,IAAD,CAAMoB,GAAG,IAAIpB,UAAW,mBCqBzBuB,MApBf,WAWI,OAPAC,qBAAU,WACNC,SAAOC,WAAW,QAAS,KAC5B,IAfP,WACI,IAAIC,EAAWC,cACfJ,qBAAU,WACNX,IAAQa,WAAW,kBACnBb,IAAQgB,IAAI,CAAEC,KAAMH,EAASI,WAC7BlB,IAAQmB,SAASL,EAASI,YAC3B,CAACJ,IAWJM,GAII,eAAC,IAAD,WACI,cAAC,IAAD,aAAOC,KAAK,GAAGC,SAAO,GAAtB,UAAgC,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAACC,EAAD,UCpB9BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,UACE,cAAC,EAAD,QAGNC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfab7774.chunk.js","sourcesContent":["const brokenImages = [\r\n    1, 24, 32, 36, 44, 47\r\n];\r\n\r\nfunction getImageUrls() {\r\n    const urls = [];\r\n\r\n    for (let i = 0; i < 50; i++) {\r\n        if (!brokenImages.includes(i)) {\r\n            const imageNumberString = i.toString().padStart(2, '0');\r\n            urls.push(`https://picsum.photos/id/6${imageNumberString}/1600/900.jpg`)\r\n        }\r\n    }\r\n\r\n    return urls;\r\n}\r\n\r\nexport const imageUrls = getImageUrls();","import React, {useState} from \"react\";  // import React (to provide access to JSX)\r\nimport './PhotoViewer.css';\r\nimport {imageUrls} from './getImages'\r\n\r\n\r\nexport function PhotoViewer() {\r\n\r\n    const [currentImage, setImage] = useState(\"https://picsum.photos/id/600/1600/900.jpg\")\r\n\r\n    return (\r\n        <div>\r\n            <img className=\"mainPhoto\" alt='mainPic' src={currentImage}/>\r\n            <h2 className={\"selectImage\"}>Select your photo</h2>\r\n            {/*<DisplayThumbnails setImageFunction={setImage} selectedImage={currentImage}/>*/}\r\n            \r\n            \r\n            <div className=\"thumbnails\">\r\n                {imageUrls.map((image, index) => (\r\n                    \r\n                    <img src={image} alt={image} onClick={() => setImage(image)}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// function DisplayThumbnails(props) {\r\n//\r\n//     let allImages = [];\r\n//     for (let url of imageUrls)\r\n//     {\r\n//         allImages.push(\r\n//             <img className=\"thumbnailImages\"  onClick={() => props.setImageFunction(url)} src={url} alt={url}/>\r\n//         );\r\n//     }\r\n//    \r\n//     return (\r\n//         <div className=\"thumbnails\">{allImages}</div>\r\n//     )\r\n// }\r\n\r\n","import React, {useState} from \"react\";\r\nimport './Clicker.css';\r\n\r\nexport function Clicker(){\r\n    \r\n    const [clickNumber, setClickNumber] = useState(0);\r\n    \r\n    const randomList = [\"doggo\", \"pupper\", \"subwoofer\", \"woofer\"];\r\n    \r\n    function incrementCount(){\r\n        setClickNumber(clickNumber +1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"buttonArea\">\r\n            <button className=\"myButton\" onClick={incrementCount}>Click me</button>\r\n            <p className=\"clickNumber\">Number of clicks: {clickNumber}</p>\r\n            \r\n            <section>\r\n                \r\n                <text>This will display a list</text>\r\n                <ul>\r\n                    {randomList.map((rando) => (\r\n                        \r\n                        <li>{rando}</li>\r\n                         ))}\r\n                        \r\n                </ul>\r\n                \r\n            </section>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\nimport {hotjar} from \"react-hotjar\";\r\nimport {PhotoViewer} from \"../../PhotoViewer/PhotoViewer\";\r\nimport {Clicker} from \"../../Clicker/Clicker\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nfunction Homepage() {\r\n\r\n    const ClickHandler = () => {\r\n        ReactGA.event({\r\n            category: \"Button\",\r\n            action: \"Click\"\r\n        })\r\n        alert(\"send the information to GA\")\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <h1 className=\"websiteHeader\">React Photo Viewer</h1>\r\n                <PhotoViewer/>\r\n                <Link to=\"/otherpage\" className={\"myButton\"}/>\r\n                <Clicker onClick={() => ClickHandler}\r\n                />\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"myButton\"\r\n                    onClick={() => ClickHandler}\r\n                    onClick={() => navigate(\"/otherpage\")}\r\n\r\n                >Navigate using navigate</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Homepage;\r\n","import React, {useEffect} from \"react\";\r\nimport {hotjar} from \"react-hotjar\";\r\nimport {PhotoViewer} from \"../../PhotoViewer/PhotoViewer\";\r\nimport {Clicker} from \"../../Clicker/Clicker\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nfunction Test() {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Clicker/>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"myButton\"\r\n                />\r\n                <Link to=\"/\" className={\"myButton\"}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Test;\r\n","\r\nimport './App.css';\r\nimport React, {useEffect} from \"react\";\r\nimport { hotjar } from 'react-hotjar';\r\nimport {HashRouter as Router, Route, Routes, useLocation } from 'react-router-dom';\r\nimport Homepage from \"./Pages/Homepage/Homepage\";\r\nimport TestPage from \"./Pages/Page2/TestPage\";\r\nimport ReactGA from 'react-ga';\r\n\r\nfunction usePageViews() {\r\n    let location = useLocation();\r\n    useEffect(() => {\r\n        ReactGA.initialize('UA-219300525-2');\r\n        ReactGA.set({ page: location.pathname });\r\n        ReactGA.pageview(location.pathname);\r\n    }, [location]);\r\n}\r\n\r\nfunction App() {\r\n\r\n    // ReactGA.initialize('UA-219300525-2');\r\n\r\n    useEffect(() => {\r\n        hotjar.initialize(2813391, 6);\r\n    }, []);\r\n\r\n    usePageViews();\r\n\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"\" element element={<Homepage/>}/>\r\n            <Route path=\"otherpage\" element={<TestPage/>}/>\r\n        </Routes>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}